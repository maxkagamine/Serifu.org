// Copyright (c) Max Kagamine
//
// This program is free software: you can redistribute it and/or modify it under
// the terms of version 3 of the GNU Affero General Public License as published
// by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
// details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see https://www.gnu.org/licenses/.

using System.Diagnostics;

namespace Serifu.Data;

[DebuggerDisplay($"{{{nameof(GetDebuggerDisplay)}(),nq}}")]
public class Quote
{
    /// <summary>
    /// ID generated by <see cref="QuoteId"/> that will refer to this quote even if the db is cleared and reimported.
    /// </summary>
    public required long Id { get; set; }

    /// <summary>
    /// The game from which this quote originates, and the importer responsible for it.
    /// </summary>
    public required Source Source { get; set; }

    /// <summary>
    /// The translated quotes, speaker names, contexts, and audio files, as a collection keyable by language.
    /// </summary>
    public TranslationCollection Translations { get; set; } = [];

    /// <summary>
    /// The date this quote was imported. Can be used to determine if any quotes need to be updated (source-specific).
    /// </summary>
    public DateTime DateImported { get; set; } = DateTime.Now;

    private string GetDebuggerDisplay()
    {
        if (!Translations.TryGetValue("en", out var tl))
        {
            tl = Translations.FirstOrDefault();
        }

        return $"Speaker = \"{tl?.SpeakerName}\", Context = \"{tl?.Context}\", Text = \"{tl?.Text}\"";
    }
}
